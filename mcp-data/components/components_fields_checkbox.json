{
  "name": "Checkbox",
  "category": "fields",
  "slug": "components/fields/checkbox",
  "summary": "Checkbox component",
  "status": "experimental",
  "aliases": [
    "checkbox"
  ],
  "props": [
    {
      "name": "checked",
      "type": "boolean",
      "required": true,
      "default": "—",
      "description": "Controlled checked state"
    },
    {
      "name": "defaultChecked",
      "type": "boolean",
      "required": true,
      "default": "false",
      "description": "Uncontrolled initial state"
    },
    {
      "name": "name",
      "type": "string",
      "required": true,
      "default": "—",
      "description": "Unique field name"
    },
    {
      "name": "label",
      "type": "ReactNode",
      "required": true,
      "default": "—",
      "description": "Label text or element"
    },
    {
      "name": "size",
      "type": "'xs' | 'sm' | 'md' | 'lg' | 'xl' | number | string",
      "required": true,
      "default": "'md'",
      "description": "Checkbox dimensions"
    },
    {
      "name": "onChange",
      "type": "(checked: boolean, e: ChangeEvent<HTMLInputElement>) => void",
      "required": true,
      "default": "—",
      "description": "Change callback"
    },
    {
      "name": "sx",
      "type": "Sx",
      "required": true
    },
    {
      "name": "disabled",
      "type": "boolean",
      "required": false,
      "default": "false",
      "description": "Disable interaction"
    },
    {
      "name": "preset",
      "type": "string | string[]",
      "required": false,
      "default": "—",
      "description": "Apply style presets"
    }
  ],
  "cssVars": [
    "--valet-checkbox-radius",
    "--valet-checkbox-stroke",
    "--valet-checkbox-inset"
  ],
  "cssPresets": [],
  "events": [
    {
      "name": "onChange",
      "payloadType": "boolean"
    }
  ],
  "actions": [],
  "slots": [
    {
      "name": "label"
    }
  ],
  "bestPractices": [
    "Use Checkbox for independent booleans. For mutually exclusive choices, prefer `RadioGroup` .",
    "Always provide a clear label. The entire label should be clickable. In forms, set a stable `name` so values submit predictably.",
    "Choose control model deliberately. Use `checked` / `onChange` when the value participates in app state; otherwise `defaultChecked` is fine for local forms.",
    "Keep targets comfortable. Pick `size` tokens or numeric sizes that keep tap areas ≥ 40–48px in dense UIs.",
    "Group with a visible question or caption when multiple checkboxes relate to one concept; don’t rely on proximity alone.",
    "Disabled with context. If a checkbox is disabled, explain why nearby; avoid silently disabling without guidance.",
    "Tokens/presets. Style with theme tokens and `preset` rather than ad‑hoc CSS to keep density and branding consistent."
  ],
  "examples": [],
  "docsUrl": "/components/field/CheckBoxDemo",
  "sourceFiles": [
    "src/components/fields/Checkbox.tsx",
    "docs/src/pages/components/field/CheckBoxDemo.tsx"
  ],
  "version": "0.31.0",
  "schemaVersion": "1.5"
}
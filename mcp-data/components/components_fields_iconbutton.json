{
  "name": "IconButton",
  "category": "fields",
  "slug": "components/fields/iconbutton",
  "summary": "IconButton component",
  "status": "golden",
  "aliases": [
    "iconbutton",
    "icon-button"
  ],
  "props": [
    {
      "name": "variant",
      "type": "IconButtonVariant",
      "required": false,
      "default": "'contained'"
    },
    {
      "name": "size",
      "type": "IconButtonSize | number | string",
      "required": false,
      "default": "'md'"
    },
    {
      "name": "icon",
      "type": "string",
      "required": false
    },
    {
      "name": "svg",
      "type": "string | ReactElement<SVGProps<SVGSVGElement>>",
      "required": false
    },
    {
      "name": "iconColor",
      "type": "string | undefined",
      "required": false
    },
    {
      "name": "sx",
      "type": "Sx",
      "required": false
    }
  ],
  "domPassthrough": {
    "element": "button",
    "omitted": [
      "style"
    ]
  },
  "cssVars": [],
  "cssPresets": [],
  "events": [],
  "actions": [],
  "slots": [
    {
      "name": "svg"
    }
  ],
  "bestPractices": [
    "Provide an accessible name. Icon‑only buttons must include `aria-label` describing the action (e.g., 'Delete item', 'Play'). Avoid vague labels.",
    "Pick variants by emphasis. Use `contained` for primary/high‑affordance actions and `outlined` for secondary/tertiary actions. Keep colour from theme tokens and avoid unbounded custom colours.",
    "Size for touch. Use token sizes (`'xs'` … `'xl'`) or numbers to maintain comfortable targets on mobile.",
    "Toggle semantics. When the button toggles state, add `aria-pressed` to reflect the current state; tooltips are optional and should not replace labels.",
    "Choose `icon` vs `svg` deliberately. Prefer `icon` for Iconify glyphs; use `svg` only for custom/brand artwork. Do not pass both at once.",
    "Keep ripple/motion subtle. Align custom presets with the theme’s motion tokens for a cohesive feel."
  ],
  "examples": [],
  "sourceFiles": [
    "src/components/fields/IconButton.tsx"
  ],
  "version": "0.32.0",
  "schemaVersion": "1.6"
}
{
  "name": "AppBar",
  "category": "layout",
  "slug": "components/layout/appbar",
  "summary": "AppBar component",
  "props": [
    {
      "name": "color",
      "type": "AppBarToken | string",
      "required": true
    },
    {
      "name": "textColor",
      "type": "AppBarToken | string",
      "required": true
    },
    {
      "name": "left",
      "type": "React.ReactNode",
      "required": true
    },
    {
      "name": "right",
      "type": "React.ReactNode",
      "required": true
    },
    {
      "name": "pad",
      "type": "Space",
      "required": true
    },
    {
      "name": "sx",
      "type": "Sx",
      "required": true
    }
  ],
  "cssVars": [
    "--valet-bg",
    "--valet-text-color"
  ],
  "cssPresets": [],
  "events": [],
  "actions": [],
  "slots": [
    {
      "name": "left"
    },
    {
      "name": "right"
    }
  ],
  "bestPractices": [
    "Use a single AppBar per route. It registers with the current `` and automatically offsets content; avoid adding manual top padding/margins.",
    "Prefer tokens and presets. Set `color` to `'primary'` , `'secondary'` , or `'tertiary'` and adjust spacing via the `pad` prop using `theme.spacing` . Use `preset` to standardize variants.",
    "Keep slot content purposeful. Place brand/navigation in `left` and primary actions in `right` . For icon-only controls, provide `aria-label` for accessibility.",
    "Avoid fixed heights. Let padding and typography define height so the AppBar adapts to density, fonts, and breakpoints without magic numbers.",
    "Mind stacking contexts. The AppBar is portalled to `document.body` with a high z-index. Avoid creating local stacking contexts that unintentionally cover it."
  ],
  "examples": [],
  "docsUrl": "/components/layout/AppBarDemo",
  "sourceFiles": [
    "src/components/layout/AppBar.tsx",
    "docs/src/pages/components/layout/AppBarDemo.tsx"
  ],
  "version": "0.30.3",
  "schemaVersion": "1.1"
}
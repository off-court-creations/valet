{
  "name": "Box",
  "category": "layout",
  "slug": "components/layout/box",
  "summary": "Box component",
  "status": "experimental",
  "aliases": [
    "box",
    "container"
  ],
  "props": [
    {
      "name": "background",
      "type": "string",
      "required": false,
      "default": "—",
      "description": "Background colour override. When set to a theme tone (primary/secondary/tertiary), text colour is derived automatically."
    },
    {
      "name": "textColor",
      "type": "string",
      "required": false,
      "default": "—",
      "description": "Explicit text colour"
    },
    {
      "name": "centerContent",
      "type": "boolean",
      "required": false,
      "default": "false",
      "description": "Center inner content using flexbox"
    },
    {
      "name": "fullWidth",
      "type": "boolean",
      "required": false,
      "default": "false",
      "description": "Stretch to 100% width of the parent container"
    },
    {
      "name": "alignX",
      "type": "'left' | 'right' | 'center'",
      "required": false,
      "enumValues": [
        "left",
        "right",
        "center",
        "centered"
      ],
      "default": "'left'"
    },
    {
      "name": "centered",
      "type": "boolean",
      "required": false,
      "deprecated": true
    },
    {
      "name": "sx",
      "type": "Sx",
      "required": false
    },
    {
      "name": "pad",
      "type": "number | string",
      "required": false,
      "default": "1",
      "description": "Container padding. Numbers map via theme.spacing(n); strings pass through (e.g., \"12px\")."
    },
    {
      "name": "compact",
      "type": "boolean",
      "required": false,
      "default": "false",
      "description": "Zero out internal padding (overrides pad)."
    },
    {
      "name": "preset",
      "type": "string | string[]",
      "required": false,
      "default": "—",
      "description": "Apply style presets"
    }
  ],
  "domPassthrough": {
    "element": "div",
    "omitted": [
      "style"
    ]
  },
  "cssVars": [
    "--valet-box-max-h",
    "--valet-bg",
    "--valet-text-color",
    "--valet-centered"
  ],
  "cssPresets": [],
  "events": [],
  "actions": [],
  "slots": [],
  "bestPractices": [
    "Treat as the neutral building block: backgrounds, padding, and simple width/height constraints.",
    "Prefer theme tokens to inherit correct contrast automatically; if you set `background`, ensure text remains accessible.",
    "Reach for `Panel` when you need separation (borders/elevation); keep visually semantic elements distinct.",
    "Use spacing tokens; prefer numeric values over hard‑coded CSS so density scales with the theme.",
    "Align purposefully: use `alignX` and `fullWidth` for placement; avoid deprecated `centered`.",
    "Reuse styles via `preset` (`definePreset()`) instead of duplicating `sx`.",
    "When Box represents a semantic region, add appropriate roles/labels (e.g., `role=\"region\"`, `aria-label`) via DOM passthrough."
  ],
  "examples": [
    {
      "id": "box-default",
      "title": "Default Box",
      "code": "<Box>\n  <Typography>Content</Typography>\n</Box>",
      "lang": "tsx",
      "runnable": true,
      "minimalProps": {}
    },
    {
      "id": "box-fullwidth",
      "title": "Full width with outline",
      "code": "<Box fullWidth sx={{ border: '1px dashed currentColor', padding: '0.5rem' }}>\n  <Typography>Stretch me</Typography>\n</Box>",
      "lang": "tsx",
      "runnable": true,
      "minimalProps": {}
    },
    {
      "id": "box-background",
      "title": "Background + padding",
      "code": "<Box background={theme.colors['tertiary']} sx={{ padding: theme.spacing(1) }}>\n  <Typography>Readable on themed background</Typography>\n</Box>",
      "lang": "tsx",
      "runnable": true,
      "minimalProps": {}
    }
  ],
  "docsUrl": "/components/layout/BoxDemo",
  "sourceFiles": [
    "src/components/layout/Box.tsx",
    "docs/src/pages/components/layout/BoxDemo.tsx"
  ],
  "version": "0.31.0",
  "schemaVersion": "1.5"
}
{
  "name": "Switch",
  "category": "fields",
  "slug": "components/fields/switch",
  "summary": "Switch component",
  "status": "golden",
  "aliases": [
    "switch",
    "toggle"
  ],
  "props": [
    {
      "name": "checked",
      "type": "boolean",
      "required": false
    },
    {
      "name": "defaultChecked",
      "type": "boolean",
      "required": false
    },
    {
      "name": "onChange",
      "type": "(checked: boolean) => void",
      "required": false
    },
    {
      "name": "name",
      "type": "string",
      "required": false
    },
    {
      "name": "size",
      "type": "SwitchSize",
      "required": false
    },
    {
      "name": "sx",
      "type": "Sx",
      "required": false
    }
  ],
  "domPassthrough": {
    "element": "button",
    "omitted": [
      "onChange",
      "style"
    ]
  },
  "cssVars": [
    "--valet-switch-outline",
    "--valet-switch-offset",
    "--valet-switch-pad"
  ],
  "cssPresets": [],
  "events": [
    {
      "name": "onChange",
      "payloadType": "boolean"
    }
  ],
  "actions": [],
  "slots": [],
  "bestPractices": [
    "Use Switch for immediate on/off settings that apply instantly; for form submissions, prefer `Checkbox`.",
    "Label state, not action (e.g., 'Wi‑Fi' rather than 'Enable'). Set a stable `name` when part of a form.",
    "Provide clear feedback on change (e.g., brief text confirmation, or reflect the new state in the UI).",
    "Respect platform conventions for motion and colours; avoid ambiguous palettes for on/off states.",
    "Ensure keyboard operability (Space toggles). Maintain accessible naming regardless of visual labels.",
    "Prefer presets/tokens for size and colour; keep thumb/track large enough for comfortable touch targets."
  ],
  "examples": [
    {
      "id": "switch-controlled",
      "title": "Controlled switch",
      "code": "() => {\n  const [on, setOn] = React.useState(false);\n  return (<Stack>\n    <Switch name='wifi' checked={on} onChange={setOn} />\n    <Typography>Wi‑Fi is {on ? 'on' : 'off'}</Typography>\n  </Stack>);\n}",
      "lang": "tsx",
      "runnable": true,
      "minimalProps": {}
    },
    {
      "id": "switch-form",
      "title": "FormControl binding",
      "code": "() => {\n  const usePrefs = Valet.createFormStore({ darkMode: true });\n  return (<FormControl useStore={usePrefs} onSubmitValues={() => void 0}>\n    <Switch name='darkMode' />\n  </FormControl>);\n}",
      "lang": "tsx",
      "runnable": true,
      "minimalProps": {}
    }
  ],
  "sourceFiles": [
    "src/components/fields/Switch.tsx"
  ],
  "version": "0.32.0",
  "schemaVersion": "1.6"
}
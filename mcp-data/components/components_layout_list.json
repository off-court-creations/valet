{
  "name": "List",
  "category": "layout",
  "slug": "components/layout/list",
  "summary": "List component",
  "props": [
    {
      "name": "data",
      "type": "T[]",
      "required": true,
      "default": "—",
      "description": "Items to render."
    },
    {
      "name": "getTitle",
      "type": "(item: T) => ReactNode",
      "required": true,
      "default": "—",
      "description": "Primary content for each row."
    },
    {
      "name": "getSubtitle",
      "type": "(item: T) => ReactNode",
      "required": true,
      "default": "—",
      "description": "Optional secondary line for each row."
    },
    {
      "name": "striped",
      "type": "boolean",
      "required": true,
      "default": "false",
      "description": "Apply zebra striping."
    },
    {
      "name": "hoverable",
      "type": "boolean",
      "required": true,
      "default": "!striped",
      "description": "Hover tint. Enabled by default for non‑striped lists."
    },
    {
      "name": "onReorder",
      "type": "(items: T[]) => void",
      "required": true,
      "default": "—",
      "description": "Fires after a drag operation ends with the new order."
    },
    {
      "name": "reorderable",
      "type": "boolean",
      "required": true,
      "default": "true",
      "description": "Enable drag‑and‑drop reordering. When false, drag is disabled."
    },
    {
      "name": "selectable",
      "type": "boolean",
      "required": true,
      "default": "false",
      "description": "Enable single selection. Click or drag to select the active item."
    },
    {
      "name": "selected",
      "type": "T | null",
      "required": true,
      "default": "—",
      "description": "Controlled selected item (by reference)."
    },
    {
      "name": "defaultSelected",
      "type": "T | null",
      "required": true,
      "default": "null",
      "description": "Uncontrolled initial selected item."
    },
    {
      "name": "onSelectionChange",
      "type": "(item: T, index: number) => void",
      "required": true,
      "default": "—",
      "description": "Fires on selection change (click or drag‑select)."
    },
    {
      "name": "sx",
      "type": "Sx",
      "required": true
    },
    {
      "name": "preset",
      "type": "string | string[]",
      "required": false,
      "default": "—",
      "description": "Apply style presets."
    }
  ],
  "cssVars": [],
  "cssPresets": [],
  "events": [
    {
      "name": "onReorder",
      "payloadType": "T[]"
    },
    {
      "name": "onSelectionChange",
      "payloadType": "T"
    }
  ],
  "actions": [],
  "slots": [
    {
      "name": "getTitle"
    },
    {
      "name": "getSubtitle"
    }
  ],
  "bestPractices": [
    "Keep rows scannable. Use `getTitle` for the primary line and a concise `getSubtitle` for secondary details; avoid overloading rows with extra UI.",
    "Choose selection deliberately. Enable `selectable` only when follow‑up actions operate on the active row. Keep selected state controlled if it syncs with app state.",
    "Reorder with care. Turn `reorderable` on when order matters and persist via `onReorder` . Provide immediate visual feedback and avoid conflicting drag handles.",
    "Respect touch/scroll ergonomics. The list locks touch scroll while reordering; avoid nesting it inside other scroll containers to prevent competing gestures.",
    "Tokenize spacing. Use presets and theme spacing rather than per‑row inline styles so density and theming remain consistent across the app.",
    "Large data sets. For very long lists, consider windowing/virtualization and defer heavy per‑row work until visible."
  ],
  "examples": [],
  "docsUrl": "/components/layout/ListDemoPage",
  "sourceFiles": [
    "src/components/layout/List.tsx",
    "docs/src/pages/components/layout/ListDemoPage.tsx"
  ],
  "version": "0.30.4",
  "schemaVersion": "1.2"
}
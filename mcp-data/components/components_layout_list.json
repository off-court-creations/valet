{
  "name": "List",
  "category": "layout",
  "slug": "components/layout/list",
  "summary": "List component",
  "status": "unstable",
  "aliases": [
    "list",
    "ul",
    "ol"
  ],
  "props": [
    {
      "name": "data",
      "type": "T[]",
      "required": true
    },
    {
      "name": "getTitle",
      "type": "(item: T) => React.ReactNode",
      "required": true
    },
    {
      "name": "getSubtitle",
      "type": "(item: T) => React.ReactNode",
      "required": false
    },
    {
      "name": "striped",
      "type": "boolean",
      "required": false
    },
    {
      "name": "hoverable",
      "type": "boolean",
      "required": false
    },
    {
      "name": "onReorder",
      "type": "(items: T[]) => void",
      "required": false
    },
    {
      "name": "reorderable",
      "type": "boolean",
      "required": false
    },
    {
      "name": "selectable",
      "type": "boolean",
      "required": false
    },
    {
      "name": "selected",
      "type": "T | null",
      "required": false
    },
    {
      "name": "defaultSelected",
      "type": "T | null",
      "required": false
    },
    {
      "name": "onSelectionChange",
      "type": "(item: T, index: number) => void",
      "required": false
    },
    {
      "name": "sx",
      "type": "Sx",
      "required": false
    }
  ],
  "domPassthrough": {
    "element": "ul",
    "omitted": [
      "children",
      "style"
    ]
  },
  "cssVars": [],
  "cssPresets": [],
  "events": [
    {
      "name": "onReorder",
      "payloadType": "T[]"
    },
    {
      "name": "onSelectionChange",
      "payloadType": "T"
    }
  ],
  "actions": [],
  "slots": [
    {
      "name": "getTitle"
    },
    {
      "name": "getSubtitle"
    }
  ],
  "bestPractices": [
    "Use for simple rows such as menus, settings, or short feeds; keep each row self‑contained.",
    "Prefer succinct labels with optional secondary text; avoid deep nested interactivity inside rows.",
    "Use selection or navigation patterns consistently (radio/checkbox icons vs chevrons).",
    "Keep item height comfortable for touch; use tokenized spacing for density.",
    "Defer dense tabular data to `Table` and two‑dimensional layouts to `Grid`."
  ],
  "examples": [
    {
      "id": "list-basic",
      "title": "Basic list",
      "code": "<List data={[{name:'Ada',role:'Programmer'},{name:'Alan',role:'Mathematician'}]} getTitle={(i)=>i.name} getSubtitle={(i)=>i.role} striped hoverable />",
      "lang": "tsx",
      "runnable": true,
      "minimalProps": {
        "data": [],
        "getTitle": "() => {}"
      }
    },
    {
      "id": "list-select-reorder",
      "title": "Selectable & reorderable",
      "code": "() => {\n  const [items, setItems] = React.useState([{name:'Ada',role:'Programmer'},{name:'Alan',role:'Mathematician'}]);\n  const [sel, setSel] = React.useState(null);\n  return (<Stack>\n    <List data={items} getTitle={(i)=>i.name} getSubtitle={(i)=>i.role} selectable reorderable selected={sel} onSelectionChange={setSel} onReorder={setItems} />\n    <Typography variant='subtitle'>Selected: {sel?.name || '—'}</Typography>\n  </Stack>);\n}",
      "lang": "tsx",
      "runnable": true,
      "minimalProps": {
        "data": [],
        "getTitle": "() => {}"
      }
    }
  ],
  "sourceFiles": [
    "src/components/layout/List.tsx"
  ],
  "version": "0.31.1",
  "schemaVersion": "1.6"
}
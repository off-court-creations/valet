{
  "name": "Accordion",
  "category": "layout",
  "slug": "components/layout/accordion",
  "summary": "Accordion component",
  "status": "experimental",
  "aliases": [
    "accordion",
    "expander"
  ],
  "props": [
    {
      "name": "defaultOpen",
      "type": "number | number[]",
      "required": false
    },
    {
      "name": "open",
      "type": "number | number[]",
      "required": false
    },
    {
      "name": "multiple",
      "type": "boolean",
      "required": false,
      "default": "false"
    },
    {
      "name": "onOpenChange",
      "type": "(open: number[]) => void",
      "required": false
    },
    {
      "name": "headingLevel",
      "type": "1 | 2 | 3 | 4 | 5 | 6",
      "required": false,
      "default": "3"
    },
    {
      "name": "constrainHeight",
      "type": "boolean",
      "required": false,
      "default": "true"
    },
    {
      "name": "compact",
      "type": "unknown",
      "required": false,
      "default": "false"
    }
  ],
  "domPassthrough": {
    "element": "div",
    "omitted": [
      "onChange"
    ]
  },
  "cssVars": [
    "--valet-divider-stroke",
    "--valet-focus-width",
    "--valet-focus-offset"
  ],
  "cssPresets": [],
  "events": [
    {
      "name": "onOpenChange",
      "payloadType": "number[]"
    }
  ],
  "actions": [],
  "slots": [],
  "bestPractices": [
    "Use for short, scannable sections. Keep headers concise and content lightweight.",
    "Choose single vs multiple expansion by context; avoid opening many sections by default.",
    "Control model deliberately: use `open` + `onOpenChange` for appâ€‘driven state, or `defaultOpen` for uncontrolled.",
    "Respect heading levels. Set `headingLevel` so the outline remains semantic within the page.",
    "Constrain height in dense pages so the thread scrolls locally rather than the document.",
    "Ensure keyboard support: Space/Enter toggles, Arrow keys move focus, and focus styles are visible."
  ],
  "examples": [
    {
      "id": "accordion-uncontrolled",
      "title": "Uncontrolled (single)",
      "code": "<Accordion>\n  <Accordion.Item header='Item 1'>Content</Accordion.Item>\n  <Accordion.Item header='Item 2'>Content</Accordion.Item>\n</Accordion>",
      "lang": "tsx",
      "runnable": true,
      "minimalProps": {}
    },
    {
      "id": "accordion-controlled-multi",
      "title": "Controlled multiple",
      "code": "() => {\n  const [open, setOpen] = React.useState([0,2]);\n  return (\n    <Accordion multiple open={open} onOpenChange={setOpen}>\n      <Accordion.Item header='Alpha'>A</Accordion.Item>\n      <Accordion.Item header='Bravo'>B</Accordion.Item>\n      <Accordion.Item header='Charlie'>C</Accordion.Item>\n    </Accordion>\n  );\n}",
      "lang": "tsx",
      "runnable": true,
      "minimalProps": {}
    }
  ],
  "sourceFiles": [
    "src/components/layout/Accordion.tsx"
  ],
  "version": "0.31.1",
  "schemaVersion": "1.6"
}
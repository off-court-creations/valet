{
  "name": "Radio",
  "category": "fields",
  "slug": "components/fields/radio",
  "summary": "Radio component",
  "status": "experimental",
  "aliases": [
    "radio",
    "radiogroup",
    "radio-group"
  ],
  "props": [
    {
      "name": "value",
      "type": "string",
      "required": true,
      "default": "—",
      "description": "Controlled value"
    },
    {
      "name": "label",
      "type": "string",
      "required": true
    },
    {
      "name": "size",
      "type": "'xs' | 'sm' | 'md' | 'lg' | 'xl' | number | string",
      "required": true,
      "default": "'md'",
      "description": "Radio size token or custom CSS measurement"
    },
    {
      "name": "children",
      "type": "ReactNode",
      "required": true
    },
    {
      "name": "sx",
      "type": "Sx",
      "required": true
    },
    {
      "name": "defaultValue",
      "type": "string",
      "required": false,
      "default": "—",
      "description": "Uncontrolled initial value"
    },
    {
      "name": "name",
      "type": "string",
      "required": false,
      "default": "—",
      "description": "Field name for forms"
    },
    {
      "name": "row",
      "type": "boolean",
      "required": false,
      "default": "false",
      "description": "Horizontal layout"
    },
    {
      "name": "spacing",
      "type": "number | string",
      "required": false,
      "default": "—",
      "description": "Gap between options"
    },
    {
      "name": "onChange",
      "type": "(val: string) => void",
      "required": false,
      "default": "—",
      "description": "Change handler"
    },
    {
      "name": "preset",
      "type": "string | string[]",
      "required": false,
      "default": "—",
      "description": "Apply style presets"
    }
  ],
  "cssVars": [],
  "cssPresets": [],
  "events": [],
  "actions": [],
  "slots": [
    {
      "name": "children"
    }
  ],
  "bestPractices": [
    "Label the group clearly. Provide a visible prompt (e.g., a preceding `Typography` ) and ensure `name` is set so the group behaves as a single form field.",
    "Choose controlled vs uncontrolled deliberately. Use `value` / `onChange` when the selection drives app state; otherwise, `defaultValue` is sufficient.",
    "Align to available space. Use `row` for short option lists in wide layouts; prefer a column for long labels or narrow screens.",
    "Keep targets comfortable. Use token sizes ( `'sm'` .. `'xl'` ) or numeric values to maintain touch targets ≥ 40–48px depending on density.",
    "Avoid nesting interactive content inside labels. Keep each option’s label succinct and non-interactive so keyboard and screen reader navigation remain predictable.",
    "Use presets for visual variants. Capture chip/pill styles with `definePreset` and apply via `preset` so branding and states stay consistent."
  ],
  "examples": [],
  "docsUrl": "/components/field/RadioGroupDemo",
  "sourceFiles": [
    "src/components/fields/RadioGroup.tsx",
    "docs/src/pages/components/field/RadioGroupDemo.tsx"
  ],
  "version": "0.31.0",
  "schemaVersion": "1.5"
}
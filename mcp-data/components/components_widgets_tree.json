{
  "name": "Tree",
  "category": "widgets",
  "slug": "components/widgets/tree",
  "summary": "Tree component",
  "aliases": [
    "tree",
    "treeview"
  ],
  "usage": {
    "purpose": "Explore hierarchical data with expand/collapse and selection.",
    "whenToUse": [
      "File systems, org charts, nested categories",
      "When users need to traverse parent/child relationships"
    ],
    "whenNotToUse": [
      "Flat lists of items (use List)",
      "Tabular datasets that benefit from columns (use Table)"
    ],
    "alternatives": [
      "List",
      "Table"
    ]
  },
  "props": [
    {
      "name": "nodes",
      "type": "TreeNode<T>[]",
      "required": true,
      "default": "—",
      "description": "Array of tree nodes"
    },
    {
      "name": "getLabel",
      "type": "(n: T) => ReactNode",
      "required": true,
      "default": "—",
      "description": "Return label for a node"
    },
    {
      "name": "defaultExpanded",
      "type": "string[]",
      "required": true,
      "default": "[]",
      "description": "Node ids expanded on mount"
    },
    {
      "name": "expanded",
      "type": "string[]",
      "required": true,
      "default": "—",
      "description": "Controlled expanded node ids"
    },
    {
      "name": "onExpandedChange",
      "type": "(ids: string[]) => void",
      "required": true,
      "default": "—",
      "description": "Handle expand/collapse changes"
    },
    {
      "name": "selected",
      "type": "string",
      "required": true,
      "default": "—",
      "description": "Controlled selected node id"
    },
    {
      "name": "defaultSelected",
      "type": "string",
      "required": true,
      "default": "—",
      "description": "Uncontrolled starting selection"
    },
    {
      "name": "onNodeSelect",
      "type": "(n: T) => void",
      "required": true,
      "default": "—",
      "description": "Called when a node is selected"
    },
    {
      "name": "variant",
      "type": "'chevron' | 'list' | 'files'",
      "required": true,
      "enumValues": [
        "chevron",
        "list",
        "files"
      ],
      "default": "'chevron'",
      "description": "Visual style of branches"
    },
    {
      "name": "sx",
      "type": "Sx",
      "required": true
    },
    {
      "name": "preset",
      "type": "string | string[]",
      "required": false,
      "default": "—",
      "description": "Apply style presets"
    }
  ],
  "cssVars": [
    "--valet-focus-width",
    "--valet-focus-offset",
    "--valet-divider-stroke",
    "--valet-tree-stroke",
    "--valet-tree-outline",
    "--valet-tree-offset"
  ],
  "cssPresets": [],
  "events": [
    {
      "name": "onExpandedChange",
      "payloadType": "string[]"
    },
    {
      "name": "onNodeSelect",
      "payloadType": "T"
    }
  ],
  "actions": [],
  "slots": [
    {
      "name": "getLabel"
    }
  ],
  "bestPractices": [
    "Use stable ids. Provide deterministic `id` s for nodes so expanded/selected state can be controlled and persisted across renders.",
    "Keep labels compact. Tree rows should be glanceable; favor short labels and use variants ( `list` or `files` ) to convey structure.",
    "Align behavior with expectations. Support Arrow keys, Enter/Space for selection, and Left/Right to collapse/expand; let double‑click toggle when appropriate.",
    "Choose control model. Use `expanded` / `onExpandedChange` and `selected` / `onNodeSelect` when external state or routing must drive the tree; otherwise use defaults.",
    "Avoid over‑nesting. Deep hierarchies are hard to scan; flatten where possible and consider search/filter affordances for large trees.",
    "Tokenized spacing. Use theme spacing for indentation so density and breakpoints scale predictably."
  ],
  "bestPracticeSlugs": [
    "use-stable-ids-provide-deterministic-s-for-nodes-so-expandedselected",
    "keep-labels-compact-tree-rows-should-be-glanceable-favor-short-labels",
    "align-behavior-with-expectations-support-arrow-keys-enterspace-for",
    "choose-control-model-use-and-when-external-state-or-routing-must-drive",
    "avoid-overnesting-deep-hierarchies-are-hard-to-scan-flatten-where",
    "tokenized-spacing-use-theme-spacing-for-indentation-so-density-and"
  ],
  "examples": [],
  "docsUrl": "/components/widgets/TreeDemo",
  "sourceFiles": [
    "src/components/widgets/Tree.tsx",
    "docs/src/pages/components/widgets/TreeDemo.tsx"
  ],
  "version": "0.31.0",
  "schemaVersion": "1.4"
}
{
  "entries": [
    {
      "term": "accessibility",
      "definition": "Mandatory accessibility in every component: proper roles, labels, keyboard support, and predictable focus behavior across the library.",
      "category": "a11y",
      "aliases": [
        "a11y"
      ],
      "seeAlso": [
        "FormControl",
        "Snackbar",
        "Modal"
      ]
    },
    {
      "term": "Best Practices",
      "definition": "Curated recommendations extracted from docs pages to steer agents and humans toward correct usage of components and patterns.",
      "category": "docs",
      "aliases": [
        "guidelines"
      ],
      "seeAlso": [
        "Semantic Interface Layer",
        "MCP"
      ]
    },
    {
      "term": "Context Bridge",
      "definition": "A typed, schema-driven bridge for state shared between app and agents, implemented with Zustand and JSON schemas.",
      "category": "ai",
      "aliases": [
        "state bridge"
      ],
      "seeAlso": [
        "theme",
        "MCP"
      ]
    },
    {
      "term": "MCP",
      "definition": "A small server and data pipeline that exposes machine-readable component facts (and glossary) to LLM agents via standardized tools.",
      "category": "mcp",
      "aliases": [
        "Model Context Protocol",
        "valet-mcp"
      ],
      "seeAlso": [
        "get_component",
        "search_components",
        "get_glossary",
        "define_term"
      ]
    },
    {
      "term": "mcp-data",
      "definition": "Generated JSON corpus with index.json, per-component docs, and auxiliary datasets (e.g., glossary.json). Served by the MCP server.",
      "category": "mcp",
      "aliases": [
        "MCP data"
      ],
      "seeAlso": [
        "MCP"
      ]
    },
    {
      "term": "Semantic Interface Layer",
      "definition": "Per-component metadata (props, events, css vars, best practices) exposed to agents to enable safe generation and adaptation of UI code.",
      "category": "ai",
      "aliases": [
        "semantic layer",
        "component semantics"
      ],
      "seeAlso": [
        "MCP",
        "mcp-data"
      ]
    },
    {
      "term": "style preset",
      "definition": "Named, reusable style tokens defined via definePreset and referenced by the preset prop to keep styles consistent and semantic.",
      "category": "css",
      "aliases": [
        "preset",
        "definePreset"
      ],
      "seeAlso": [
        "styled",
        "theme"
      ]
    },
    {
      "term": "styled",
      "definition": "A tiny runtime styling helper exporting styled and keyframes. Registers elements with Surface and exposes CSS vars for size.",
      "category": "css",
      "aliases": [
        "createStyled",
        "css-in-js"
      ],
      "seeAlso": [
        "style preset",
        "Surface"
      ]
    },
    {
      "term": "Surface",
      "definition": "A route-level container that owns a small Zustand store and CSS variables for screen size. Disallows nesting; components register themselves under a Surface.",
      "category": "core",
      "seeAlso": [
        "Stack",
        "Panel",
        "styled"
      ]
    },
    {
      "term": "Surface state",
      "definition": "Per-Surface Zustand store tracking screen and registered child element sizes. Components expose --valet-el-* CSS vars; Surface exposes screen vars.",
      "category": "core",
      "aliases": [
        "element registry"
      ],
      "seeAlso": [
        "Surface",
        "styled"
      ]
    },
    {
      "term": "theme",
      "definition": "Zustand-backed theme store with runtime theming and font preloading. Read via useTheme and initialize once with useInitialTheme.",
      "category": "state",
      "aliases": [
        "themeStore",
        "useTheme",
        "useInitialTheme"
      ],
      "seeAlso": [
        "styled",
        "style preset"
      ]
    },
    {
      "term": "valet",
      "definition": "A performant, opinionated React UI library with a minimal CSS-in-JS engine, a11y-first components, and AI-forward introspection via MCP.",
      "category": "core",
      "aliases": [
        "@archway/valet",
        "Valet"
      ],
      "seeAlso": [
        "styled",
        "Surface",
        "MCP",
        "Semantic Interface Layer"
      ]
    },
    {
      "term": "Web Action Graph",
      "definition": "A conceptual graph of user and system actions captured at runtime to enable introspection, automation, and adaptation.",
      "category": "ai",
      "aliases": [
        "action graph",
        "WAG"
      ],
      "seeAlso": [
        "Semantic Interface Layer"
      ]
    }
  ],
  "version": "0.31.0",
  "builtAt": "2025-09-11T22:15:16.355Z"
}
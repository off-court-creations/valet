{
  "name": "DateSelector",
  "category": "fields",
  "slug": "components/fields/dateselector",
  "summary": "DateSelector component",
  "status": "experimental",
  "aliases": [
    "date",
    "datepicker",
    "daterange"
  ],
  "props": [
    {
      "name": "value",
      "type": "string",
      "required": false
    },
    {
      "name": "defaultValue",
      "type": "string",
      "required": false
    },
    {
      "name": "onChange",
      "type": "(value: string) => void",
      "required": false
    },
    {
      "name": "name",
      "type": "string",
      "required": false
    },
    {
      "name": "minDate",
      "type": "string",
      "required": false
    },
    {
      "name": "maxDate",
      "type": "string",
      "required": false
    },
    {
      "name": "range",
      "type": "boolean",
      "required": false,
      "default": "false"
    },
    {
      "name": "endValue",
      "type": "string",
      "required": false
    },
    {
      "name": "defaultEndValue",
      "type": "string",
      "required": false
    },
    {
      "name": "onRangeChange",
      "type": "(start: string, end: string) => void",
      "required": false
    },
    {
      "name": "sx",
      "type": "Sx",
      "required": false
    },
    {
      "name": "compactMode",
      "type": "'auto' | 'on' | 'off'",
      "required": false,
      "default": "'auto'",
      "enumValues": [
        "auto",
        "on",
        "off"
      ]
    },
    {
      "name": "compactThresholdIn",
      "type": "number",
      "required": false,
      "default": "340"
    },
    {
      "name": "compactThresholdOut",
      "type": "number",
      "required": false,
      "default": "380"
    }
  ],
  "domPassthrough": {
    "element": "div",
    "omitted": [
      "onChange",
      "style"
    ]
  },
  "cssVars": [
    "--valet-date-radius",
    "--valet-date-cell-radius",
    "--valet-text-color"
  ],
  "cssPresets": [],
  "events": [
    {
      "name": "onChange",
      "payloadType": "string"
    },
    {
      "name": "onRangeChange",
      "payloadType": "string"
    }
  ],
  "actions": [],
  "slots": [],
  "bestPractices": [
    "Use ISO 'YYYY-MM-DD' strings for values; avoid locale-dependent parsing.",
    "Control the value in app state to persist selection across navigation.",
    "Constrain input with minDate/maxDate to prevent out-of-range selection.",
    "For ranges, keep [start, end] ordered and handle partial selection gracefully.",
    "Avoid timezone pitfalls: treat values as local dates to prevent off-by-one errors.",
    "Prefer compactMode on small viewports; use default/adaptive on larger layouts."
  ],
  "examples": [],
  "sourceFiles": [
    "src/components/fields/DateSelector.tsx"
  ],
  "version": "0.32.0",
  "schemaVersion": "1.6"
}